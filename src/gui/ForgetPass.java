/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import java.util.Properties;
import java.util.Random;
import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.JOptionPane;

/**
 *
 * @author handa
 */
public class ForgetPass extends javax.swing.JFrame {
  private String generatedOTP;
  public ForgetPass() {
        initComponents();
        setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btn_Verifikasi = new javax.swing.JButton();
        btn_sendEmail = new javax.swing.JButton();
        txOTP = new javax.swing.JTextField();
        txEmail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_Verifikasi.setBackground(new java.awt.Color(255, 255, 255));
        btn_Verifikasi.setForeground(new java.awt.Color(0, 0, 0));
        btn_Verifikasi.setText("VERFIKASI");
        btn_Verifikasi.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        btn_Verifikasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_VerifikasiActionPerformed(evt);
            }
        });
        jPanel1.add(btn_Verifikasi, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 420, 120, 30));

        btn_sendEmail.setBackground(new java.awt.Color(255, 255, 255));
        btn_sendEmail.setForeground(new java.awt.Color(0, 0, 0));
        btn_sendEmail.setText("KIRIM EMAIL");
        btn_sendEmail.setBorder(javax.swing.BorderFactory.createMatteBorder(2, 2, 2, 2, new java.awt.Color(0, 0, 0)));
        btn_sendEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendEmailActionPerformed(evt);
            }
        });
        jPanel1.add(btn_sendEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 385, 120, 30));

        txOTP.setBackground(new java.awt.Color(255, 255, 255));
        txOTP.setBorder(null);
        jPanel1.add(txOTP, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 345, 150, -1));

        txEmail.setBackground(new java.awt.Color(255, 255, 255));
        txEmail.setBorder(null);
        jPanel1.add(txEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 285, 180, 20));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/FORGOT PASSWORD (3).png"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_VerifikasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_VerifikasiActionPerformed
         String inputOTP = txOTP.getText().trim();

        if (inputOTP.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter the OTP.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (inputOTP.equals(generatedOTP)) {
            JOptionPane.showMessageDialog(null, "kode OTP benar! Mengarahkan ke halaman reset password.");
            new ResetPass().setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Incorrect OTP. Try again!", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_VerifikasiActionPerformed

    private void btn_sendEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendEmailActionPerformed
        String email = txEmail.getText().trim();

        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please enter your email.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(null, "Invalid email format!", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Generate OTP
        generatedOTP = generateOTP();

        // Send OTP via Email
        boolean emailSent = sendEmail(email, generatedOTP);
        if (emailSent) {
            JOptionPane.showMessageDialog(null, "OTP has been sent to your email.");
            txOTP.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Failed to send OTP. Try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_sendEmailActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ForgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ForgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ForgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ForgetPass.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ForgetPass().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_Verifikasi;
    private javax.swing.JButton btn_sendEmail;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txEmail;
    private javax.swing.JTextField txOTP;
    // End of variables declaration//GEN-END:variables
 private String generateOTP() {
    Random random = new Random();
        int otp = 100000 + random.nextInt(900000);
        return String.valueOf(otp); 
    }

    
    private boolean sendEmail(String email, String otp) {
        final String senderEmail = "handaruarioseto12@gmail.com";
        final String senderPassword = "owxa qjpj wlao nzpl"; 

        Properties properties = new Properties();
        properties.put("mail.smtp.auth", "true");
        properties.put("mail.smtp.starttls.enable", "true");
        properties.put("mail.smtp.ssl.protocols", "TLSv1.2");
        properties.put("mail.smtp.host", "smtp.gmail.com");
        properties.put("mail.smtp.port", "587");

        Session session = Session.getInstance(properties, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(senderEmail, senderPassword);
            }
        });

        try {
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(email));
            message.setSubject("Your OTP Code");
            message.setText("Your OTP is: " + otp);

            Transport.send(message);
            return true;
        } catch (MessagingException e) {
            e.printStackTrace();
            return false;
        }
    }

    private boolean isValidEmail(String email) {
        return email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$");
    }}

